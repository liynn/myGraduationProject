<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jambin.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="cn.jambin.entity.Book" >
    <id column="book_id" property="bookId" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="translator" property="translator" jdbcType="VARCHAR" />
    <result column="pubdate" property="pubdate" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="VARCHAR" />
    <result column="tags" property="tags" jdbcType="VARCHAR" />
    <result column="publisher" property="publisher" jdbcType="VARCHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="pages" property="pages" jdbcType="VARCHAR" />
    <result column="alt" property="alt" jdbcType="VARCHAR" />
    <result column="alt_title" property="altTitle" jdbcType="VARCHAR" />
    <result column="series_id" property="seriesId" jdbcType="INTEGER" />
    <result column="series_title" property="seriesTitle" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.jambin.entity.BookWithBLOBs" extends="BaseResultMap" >
    <result column="author_intro" property="authorIntro" jdbcType="LONGVARCHAR" />
    <result column="summary" property="summary" jdbcType="LONGVARCHAR" />
    <result column="catalog" property="catalog" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    book_id, title, author, translator, pubdate, price, tags, publisher, image, pages, 
    alt, alt_title, series_id, series_title, flag
  </sql>
  <sql id="Blob_Column_List" >
    author_intro, summary, catalog
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.jambin.entity.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.jambin.entity.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from book
    where book_id = #{bookId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jambin.entity.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jambin.entity.BookWithBLOBs" >
    insert into book (book_id, title, author, 
      translator, pubdate, price, 
      tags, publisher, image, 
      pages, alt, alt_title, 
      series_id, series_title, flag, 
      author_intro, summary, catalog
      )
    values (#{bookId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{translator,jdbcType=VARCHAR}, #{pubdate,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, 
      #{tags,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{pages,jdbcType=VARCHAR}, #{alt,jdbcType=VARCHAR}, #{altTitle,jdbcType=VARCHAR}, 
      #{seriesId,jdbcType=INTEGER}, #{seriesTitle,jdbcType=VARCHAR}, #{flag,jdbcType=TINYINT}, 
      #{authorIntro,jdbcType=LONGVARCHAR}, #{summary,jdbcType=LONGVARCHAR}, #{catalog,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.jambin.entity.BookWithBLOBs" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="translator != null" >
        translator,
      </if>
      <if test="pubdate != null" >
        pubdate,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="tags != null" >
        tags,
      </if>
      <if test="publisher != null" >
        publisher,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="pages != null" >
        pages,
      </if>
      <if test="alt != null" >
        alt,
      </if>
      <if test="altTitle != null" >
        alt_title,
      </if>
      <if test="seriesId != null" >
        series_id,
      </if>
      <if test="seriesTitle != null" >
        series_title,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="authorIntro != null" >
        author_intro,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="catalog != null" >
        catalog,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="translator != null" >
        #{translator,jdbcType=VARCHAR},
      </if>
      <if test="pubdate != null" >
        #{pubdate,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="tags != null" >
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="pages != null" >
        #{pages,jdbcType=VARCHAR},
      </if>
      <if test="alt != null" >
        #{alt,jdbcType=VARCHAR},
      </if>
      <if test="altTitle != null" >
        #{altTitle,jdbcType=VARCHAR},
      </if>
      <if test="seriesId != null" >
        #{seriesId,jdbcType=INTEGER},
      </if>
      <if test="seriesTitle != null" >
        #{seriesTitle,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=TINYINT},
      </if>
      <if test="authorIntro != null" >
        #{authorIntro,jdbcType=LONGVARCHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="catalog != null" >
        #{catalog,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jambin.entity.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.translator != null" >
        translator = #{record.translator,jdbcType=VARCHAR},
      </if>
      <if test="record.pubdate != null" >
        pubdate = #{record.pubdate,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.tags != null" >
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null" >
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.pages != null" >
        pages = #{record.pages,jdbcType=VARCHAR},
      </if>
      <if test="record.alt != null" >
        alt = #{record.alt,jdbcType=VARCHAR},
      </if>
      <if test="record.altTitle != null" >
        alt_title = #{record.altTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.seriesId != null" >
        series_id = #{record.seriesId,jdbcType=INTEGER},
      </if>
      <if test="record.seriesTitle != null" >
        series_title = #{record.seriesTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=TINYINT},
      </if>
      <if test="record.authorIntro != null" >
        author_intro = #{record.authorIntro,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.catalog != null" >
        catalog = #{record.catalog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update book
    set book_id = #{record.bookId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      translator = #{record.translator,jdbcType=VARCHAR},
      pubdate = #{record.pubdate,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      pages = #{record.pages,jdbcType=VARCHAR},
      alt = #{record.alt,jdbcType=VARCHAR},
      alt_title = #{record.altTitle,jdbcType=VARCHAR},
      series_id = #{record.seriesId,jdbcType=INTEGER},
      series_title = #{record.seriesTitle,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=TINYINT},
      author_intro = #{record.authorIntro,jdbcType=LONGVARCHAR},
      summary = #{record.summary,jdbcType=LONGVARCHAR},
      catalog = #{record.catalog,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set book_id = #{record.bookId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      translator = #{record.translator,jdbcType=VARCHAR},
      pubdate = #{record.pubdate,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      pages = #{record.pages,jdbcType=VARCHAR},
      alt = #{record.alt,jdbcType=VARCHAR},
      alt_title = #{record.altTitle,jdbcType=VARCHAR},
      series_id = #{record.seriesId,jdbcType=INTEGER},
      series_title = #{record.seriesTitle,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jambin.entity.BookWithBLOBs" >
    update book
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="translator != null" >
        translator = #{translator,jdbcType=VARCHAR},
      </if>
      <if test="pubdate != null" >
        pubdate = #{pubdate,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="tags != null" >
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="pages != null" >
        pages = #{pages,jdbcType=VARCHAR},
      </if>
      <if test="alt != null" >
        alt = #{alt,jdbcType=VARCHAR},
      </if>
      <if test="altTitle != null" >
        alt_title = #{altTitle,jdbcType=VARCHAR},
      </if>
      <if test="seriesId != null" >
        series_id = #{seriesId,jdbcType=INTEGER},
      </if>
      <if test="seriesTitle != null" >
        series_title = #{seriesTitle,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=TINYINT},
      </if>
      <if test="authorIntro != null" >
        author_intro = #{authorIntro,jdbcType=LONGVARCHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="catalog != null" >
        catalog = #{catalog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.jambin.entity.BookWithBLOBs" >
    update book
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      translator = #{translator,jdbcType=VARCHAR},
      pubdate = #{pubdate,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      pages = #{pages,jdbcType=VARCHAR},
      alt = #{alt,jdbcType=VARCHAR},
      alt_title = #{altTitle,jdbcType=VARCHAR},
      series_id = #{seriesId,jdbcType=INTEGER},
      series_title = #{seriesTitle,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=TINYINT},
      author_intro = #{authorIntro,jdbcType=LONGVARCHAR},
      summary = #{summary,jdbcType=LONGVARCHAR},
      catalog = #{catalog,jdbcType=LONGVARCHAR}
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jambin.entity.Book" >
    update book
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      translator = #{translator,jdbcType=VARCHAR},
      pubdate = #{pubdate,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      pages = #{pages,jdbcType=VARCHAR},
      alt = #{alt,jdbcType=VARCHAR},
      alt_title = #{altTitle,jdbcType=VARCHAR},
      series_id = #{seriesId,jdbcType=INTEGER},
      series_title = #{seriesTitle,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=TINYINT}
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>


  <select id="getTopReadBook" resultType="cn.jambin.dto.BookDto">
    SELECT b.*, bs.avg_rating, bs.total FROM book_statistics bs LEFT JOIN book b on (bs.book_id = b.book_id) ORDER BY bs.total DESC
  </select>

  <select id="getTopRatingBook" resultType="cn.jambin.dto.BookDto">
    SELECT b.*, bs.avg_rating, bs.total  FROM book_statistics bs LEFT JOIN book b on (bs.book_id = b.book_id) WHERE bs.total >99 ORDER BY bs.avg_rating DESC
  </select>

  <select id="getBookById" resultType="cn.jambin.dto.BookDto">
    SELECT b.*, bs.* FROM book b LEFT JOIN book_statistics bs ON b.book_id = bs.book_id WHERE b.book_id = #{id,jdbcType=BIGINT}
  </select>

  <select id="searchByBookName" resultType="cn.jambin.dto.BookDto">
    SELECT b.*, bs.* FROM book b LEFT JOIN book_statistics bs ON b.book_id = bs.book_id
    WHERE b.title LIKE CONCAT(CONCAT('%', #{name}), '%')
    OR b.author LIKE CONCAT(CONCAT('%', #{name}), '%')
    order BY bs.total DESC
  </select>

  <select id="getUserRatingByBookId" resultType="cn.jambin.dto.UserRatingVo">
   SELECT * from rating r left join user u on r.user_id = u.user_id WHERE r.book_id=#{bookId} ORDER BY r.id DESC
  </select>

  <select id="getBookByTag" resultType="cn.jambin.dto.BookDto">
   SELECT
      b.*,
      bs.*
	FROM
	  tag t
	LEFT JOIN book_tag bt ON t.id = bt.tag_id
	LEFT JOIN book b ON bt.book_id = b.book_id
	LEFT JOIN book_statistics bs ON b.book_id = bs.book_id
    WHERE
        t.name=#{name,jdbcType=VARCHAR}
    ORDER BY
    bs.total DESC
  </select>


</mapper>