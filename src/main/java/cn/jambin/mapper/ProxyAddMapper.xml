<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jambin.mapper.ProxyAddMapper" >
  <resultMap id="BaseResultMap" type="cn.jambin.entity.ProxyAdd" >
    <id column="host" property="host" jdbcType="VARCHAR" />
    <result column="port" property="port" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="TINYINT" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="err_total" property="errTotal" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.jambin.entity.ProxyAdd" extends="BaseResultMap" >
    <result column="error_info" property="errorInfo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    host, port, flag, time, total, err_total
  </sql>
  <sql id="Blob_Column_List" >
    error_info
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.jambin.entity.ProxyAddExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from proxy_add
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.jambin.entity.ProxyAddExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from proxy_add
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from proxy_add
    where host = #{host,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from proxy_add
    where host = #{host,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jambin.entity.ProxyAddExample" >
    delete from proxy_add
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jambin.entity.ProxyAdd" >
    insert into proxy_add (host, port, flag, 
      time, total, err_total, 
      error_info)
    values (#{host,jdbcType=VARCHAR}, #{port,jdbcType=INTEGER}, #{flag,jdbcType=TINYINT}, 
      #{time,jdbcType=TIMESTAMP}, #{total,jdbcType=INTEGER}, #{errTotal,jdbcType=INTEGER}, 
      #{errorInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jambin.entity.ProxyAdd" >
    insert into proxy_add
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        host,
      </if>
      <if test="port != null" >
        port,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="errTotal != null" >
        err_total,
      </if>
      <if test="errorInfo != null" >
        error_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=TINYINT},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="errTotal != null" >
        #{errTotal,jdbcType=INTEGER},
      </if>
      <if test="errorInfo != null" >
        #{errorInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jambin.entity.ProxyAddExample" resultType="java.lang.Integer" >
    select count(*) from proxy_add
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update proxy_add
    <set >
      <if test="record.host != null" >
        host = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null" >
        port = #{record.port,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=TINYINT},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.errTotal != null" >
        err_total = #{record.errTotal,jdbcType=INTEGER},
      </if>
      <if test="record.errorInfo != null" >
        error_info = #{record.errorInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update proxy_add
    set host = #{record.host,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=TINYINT},
      time = #{record.time,jdbcType=TIMESTAMP},
      total = #{record.total,jdbcType=INTEGER},
      err_total = #{record.errTotal,jdbcType=INTEGER},
      error_info = #{record.errorInfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update proxy_add
    set host = #{record.host,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=TINYINT},
      time = #{record.time,jdbcType=TIMESTAMP},
      total = #{record.total,jdbcType=INTEGER},
      err_total = #{record.errTotal,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jambin.entity.ProxyAdd" >
    update proxy_add
    <set >
      <if test="port != null" >
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=TINYINT},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="errTotal != null" >
        err_total = #{errTotal,jdbcType=INTEGER},
      </if>
      <if test="errorInfo != null" >
        error_info = #{errorInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where host = #{host,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.jambin.entity.ProxyAdd" >
    update proxy_add
    set port = #{port,jdbcType=INTEGER},
      flag = #{flag,jdbcType=TINYINT},
      time = #{time,jdbcType=TIMESTAMP},
      total = #{total,jdbcType=INTEGER},
      err_total = #{errTotal,jdbcType=INTEGER},
      error_info = #{errorInfo,jdbcType=LONGVARCHAR}
    where host = #{host,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jambin.entity.ProxyAdd" >
    update proxy_add
    set port = #{port,jdbcType=INTEGER},
      flag = #{flag,jdbcType=TINYINT},
      time = #{time,jdbcType=TIMESTAMP},
      total = #{total,jdbcType=INTEGER},
      err_total = #{errTotal,jdbcType=INTEGER}
    where host = #{host,jdbcType=VARCHAR}
  </update>
</mapper>